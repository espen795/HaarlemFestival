@using HaarlemFestival.Models;
@using System.Collections.Generic;
@using System.Globalization;
@model TalkViewModel

@{
    ViewBag.Title = "Talking Haarlem - Reservation";
}

<script type="text/javascript">
    function UpdateQuestions()
    {
        var ticketAmounts = document.getElementsByClassName("talk-ticket-amount");
        var questions = document.getElementsByClassName("talk-question");

        for (var i = 0; i < ticketAmounts.length; i++)
        {
            if (ticketAmounts[i].value > 0)
                questions[i].style.display = "block";
            else
                questions[i].style.display = "none";
        }
    }
</script>

<section class="event-banner talking"></section>

<main class="event container talking">
@Html.ValidationSummary()
@using (Html.BeginForm())
{
    <section class="row">
        <!-- Section 1 -->
        <section class="talk-reservation-container">
            <!-- Header -->
            <section>
                <h1>
                    Order your amount of tickets <span class="talk-bold">(max 2 tickets per talk)</span>
                </h1>
            </section>

            <!-- Table -->
            <section>
                <table class="talking-reservation-table">
                    <tr>
                        <th>Ticket Amount</th>
                        <th>Talk</th>
                        <th>Price</th>
                        <th>Date & Time (DD-MM-YYYY)</th>
                        <th>Location</th>
                    </tr>
                    @foreach (Talking talk in Model.Talkings)
                    {
                    <tr>
                        @if (talk.TalkId == ViewBag.OrderId)
                        {
                            <td><input value="1" onchange="UpdateQuestions()" id="ticket-amount@(talk.TalkId)" class="talk-ticket-amount" min="0" max="2" type="number" /></td>
                        }
                        else
                        {
                            <td><input value="" onchange="UpdateQuestions()" id="ticket-amount@(talk.TalkId)" class="talk-ticket-amount" min="0" max="2" type="number" /></td>
                        }                     
                        <td>@talk.Talk.Naam</td>
                        <td>Free</td>
                        <td>@talk.Day.Naam @talk.Day.Date.ToShortDateString() | @talk.StartSession.ToShortTimeString() - @talk.EndSession.ToShortTimeString()</td>
                        <td>Toneelschuur</td>
                    </tr>
                    }
                </table>
            </section> <!-- Table -->

            <section class="">
                <p>
                    Fill in an optional question (Dutch or English) below for one of the interviewees and it might
                    be used for the interview <span class="talk-bold">(only if you ordered one or two tickets for that specific talk)</span>
                </p>
             </section> <!-- Question info-->
             
             <section class="talk-questions">
             @for (int i = 0; i < Model.Talkings.Count; i++)
             {
                <section class="talk-question" id="question1">
                    <p>@Model.Talkings[i].Talk.Naam</p>
                    <section class="talk-question-receiver">
                        <p>Question For: </p>

                        @Html.DropDownListFor(
                             m => m.Talkings[i].Question, new SelectList(new List<Object> { Model.Talkings[i].Talk.Person1, Model.Talkings[i].Talk.Person2 }),
                             "[Select a person..]"
                             )
                    </section> <!-- Receiver -->

                    @Html.TextAreaFor(m => m.Talkings[i].Question, new { @class = "talk-questionbox", placeholder = "You can type your question here." });
                </section> <!-- Talk question -->
             }
            </section> <!-- Questions section -->
            <section>
                @Html.ActionLink("Back to Talking Haarlem", "Index", "Talking", new { }, new { @class = "btn btn-black talk-back-btn" })
                
                @Html.ActionLink("Add to basket", "Index", "Talking", new { }, new { type = "submit", @class = "btn btn-black talk-order-btn"})
                
            </section> <!-- Buttons -->
        </section> <!-- Section 1 Reservation Container -->
    </section> <!-- row -->
}
</main>