@using HaarlemFestival.Models;
@using System.Collections.Generic;
@using System.Globalization;
@using System;
@using System.Linq;
@model BasketModel

@{
    ViewBag.Title = "Basket";
}

<div class="event-banner"></div>

<div class="event container">
    <div class="row">
        <!-- Section 1 -->
        <div class="event-section-1">
            <div class="col-md-6">
                <h1 class="title">Basket</h1>
                <p class="content">
                    On this page you can view and edit the items in your basket.
                </p>
            </div>
            <div class="col-md-6">
                <div class="sfeer-image">
                    <img src="/images/Jazz/sfeer_3.png" />
                </div>
                <div class="sfeer-image">
                    <img src="/images/Dinner/sfeer/sfeer2.png" />
                </div>
                <div class="sfeer-image">
                    <img src="/images/Historic/sfeer/sfeer2.jpg" />
                </div>
            </div>
        </div>

        <div class="event-section-2">
            <hr class="title-hr title-line-left">
            <div class="event-header basket-header">
                <div class="overlay">
                    <span class="header_tekst">Your basket</span>
                </div>
            </div>
            <hr class="title-hr title-line-right">
        </div>

        <div class="event-section-3">
            @if (Model.Order == null || Model.Order.Count == 0)
            {
                <h3 class="basket-emptybasket">Please add items to your basket</h3>
            }

            else
            {
                <div class="basket-content">
                    <table class="table table-hover table-responsive basket-table">
                        <tr>
                            <th class="basket-table-tickets-head">Tickets</th>
                            <th class="basket-table-name-head">Event</th>
                            <th class="basket-table-time-head">Date and time</th>
                            <th class="basket-table-price-head">Price</th>
                            <th class="basket-table-remove-head">Remove</th>
                        </tr>
                        @foreach (BesteldeActiviteit ordered in Model.Order)
                        {
                            <tr>
                                <td class="basket-table-tickets">@ordered.TotalBoughtTickets</td>
                                @if (ordered.Activiteit.EventType == EventType.JazzPatronaat)
                                {
                                    foreach (Jazz jazz in Model.Jazzs)
                                    {
                                        if (jazz.ActivityId == ordered.Activiteit.ActivityId)
                                        {
                                            <td class="basket-table-name">@jazz.artist.ArtistName</td>
                                            break;
                                        }
                                    }
                                }
                                else if (ordered.Activiteit.EventType == EventType.DinnerInHaarlem)
                                {
                                    foreach (Dinner dinner in Model.Dinners)
                                    {
                                        if (dinner.ActivityId == ordered.Activiteit.ActivityId)
                                        {
                                            <td class="basket-table-name">@dinner.Restaurant.Naam</td>
                                            break;
                                        }
                                    }
                                }
                                else if (ordered.Activiteit.EventType == EventType.TalkingHaarlem)
                                {
                                    foreach (Talking talk in Model.Talks)
                                    {
                                        if (talk.ActivityId == ordered.Activiteit.ActivityId)
                                        {
                                            <td class="basket-table-name">@talk.Talk.Naam</td>
                                            break;
                                        }
                                    }
                                }
                                else if (ordered.Activiteit.EventType == EventType.HistoricHaarlem)
                                {
                                    foreach (Historic historic in Model.Historics)
                                    {
                                        if (historic.ActivityId == ordered.Activiteit.ActivityId)
                                        {
                                            // Moet nog checken en weergeven of het een groepsticket is
                                            <td class="basket-table-name">Historic Tour in @historic.Guide.LanguageName by @historic.Guide.GuideName</td>
                                            break;
                                        }
                                    }
                                }

                                <td class="basket-table-time">@ordered.Activiteit.StartSession.ToString("ddd dd/MM/yyyy HH:mm") - @ordered.Activiteit.EndSession.ToString("ddd dd/MM/yyyy HH:mm")</td>
                                <td class="basket-table-price">€@ordered.Price.ToString("0.00")</td>
                                <td class="basket-table-remove"><a href=@Url.Action("RemoveFromBasketById", "Home", new { id = ordered.Activiteit.ActivityId })><i class="fa fa-trash-o" aria-hidden="true"></i></a></td>
                            </tr>
                        }
                    </table>
                    <button class="btn btn-black basket-button" type="button" onclick="location.href='@Url.Action("Reservation", "Home")'">Next step</button>
                </div>
            }
        </div>
        <div class="event-section-4">
            <div class="basket-crossselling">
                <h3>You could also:</h3>
                @{
                    List<Activity> AllActivities = new List<Activity>();

                    Model.Jazzs.RemoveAll(x => x.TotalTickets == 0);

                    AllActivities.AddRange(Model.Jazzs);
                    AllActivities.AddRange(Model.Dinners);
                    AllActivities.AddRange(Model.Talks);
                    AllActivities.AddRange(Model.Historics);

                    Random rnd = new Random();

                    for (int i = 0; i < 3; i++)
                    {
                        int random = rnd.Next(1, AllActivities.Count);

                        <div class="col-md-4 basket-crossselling-item">
                            @if (AllActivities[random].EventType == EventType.JazzPatronaat)
                            {
                                Jazz jazz = Model.Jazzs.Find(x => x.ActivityId == AllActivities[random].ActivityId);
                                <h4>Go to a concert</h4>
                                <div class="basket-crossselling-item-image-container">
                                    <a href="@Url.Action("Reservation", "Jazz")"><img src="/images/Jazz/artiesten/@jazz.artist.ArtistImage" /></a>
                                </div>
                                <table>
                                    <tr>
                                        <td>Bands:</td>
                                        <td>@jazz.artist.ArtistName</td>
                                    </tr>
                                    <tr>
                                        <td>Price:</td>
                                        <td>@jazz.Price</td>
                                    </tr>
                                    <tr>
                                        <td>Start:</td>
                                        <td>@jazz.StartSession.ToString("HH:mm")</td>
                                    </tr>
                                    <tr>
                                        <td>Location:</td>
                                        <td>@jazz.Address</td>
                                    </tr>
                                </table>
                                AllActivities.RemoveAll(x => x.EventType == EventType.JazzPatronaat);
                            }
                            else if (AllActivities[random].EventType == EventType.DinnerInHaarlem)
                            {
                                Dinner dinner = Model.Dinners.Find(x => x.ActivityId == AllActivities[random].ActivityId);
                                <h4>Get dinner</h4>
                                <div class="basket-crossselling-item-image-container">
                                    <a href="@Url.Action("Reservation", "Dinner", new { id = dinner.Restaurant.RestaurantId})"><img class="basket-crossselling-item-dinnerimage" src="/images/Dinner/restaurants/@dinner.Restaurant.FoodIMG" alt="Picture not found" /></a>
                                </div>
                                <table>
                                    <tr>
                                        <td>Restaurant:</td>
                                        <td>@dinner.Restaurant.Naam</td>
                                    </tr>
                                    <tr>
                                        <td>Price:</td>
                                        <td>@dinner.Restaurant.DisplayPrice</td>
                                    </tr>
                                    <tr>
                                        <td>Start:</td>
                                        <td>@dinner.StartSession.ToString("HH:mm")</td>
                                    </tr>
                                    <tr>
                                        <td>Location:</td>
                                        <td>@dinner.Address</td>
                                    </tr>
                                </table>
                                AllActivities.RemoveAll(x => x.EventType == EventType.DinnerInHaarlem);
                            }
                            else if (AllActivities[random].EventType == EventType.TalkingHaarlem)
                            {
                                Talking talking = Model.Talks.Find(x => x.ActivityId == AllActivities[random].ActivityId);
                                <h4>Get dinner</h4>
                                <div class="basket-crossselling-item-image-container">
                                    <a href="@Url.Action("Reservation", "Talking", new { id = talking.Talk.TalkId })"><img src="/images/Talking/@talking.Talk.Person1AltIMG" /></a>
                                </div>
                                <table>
                                    <tr>
                                        <td>Talk:</td>
                                        <td>@talking.Talk.Naam</td>
                                    </tr>
                                    <tr>
                                        <td>Price:</td>
                                        <td>Free</td>
                                    </tr>
                                    <tr>
                                        <td>Start:</td>
                                        <td>@talking.StartSession.ToString("HH:mm")</td>
                                    </tr>
                                    <tr>
                                        <td>Location:</td>
                                        <td>@talking.Address</td>
                                    </tr>
                                </table>

                                AllActivities.RemoveAll(x => x.EventType == EventType.TalkingHaarlem);
                            }
                            else if (AllActivities[random].EventType == EventType.HistoricHaarlem)
                            {
                                Historic historic = Model.Historics.Find(x => x.ActivityId == AllActivities[random].ActivityId);
                                <h4>Go on a walk</h4>
                                <div class="basket-crossselling-item-image-container">
                                    <a><img src="/images/Historic/Locaties/3.jpg" /></a>
                                </div>
                                <table>
                                    <tr>
                                        <td>Language:</td>
                                        <td>@historic.Guide.LanguageName</td>
                                    </tr>
                                    <tr>
                                        <td>Price:</td>
                                        <td>@historic.Price</td>
                                    </tr>
                                    <tr>
                                        <td>Start:</td>
                                        <td>@historic.StartSession.ToString("HH:mm")</td>
                                    </tr>
                                    <tr>
                                        <td>Start point:</td>
                                        <td>@historic.Address</td>
                                    </tr>
                                </table>

                                AllActivities.RemoveAll(x => x.EventType == EventType.HistoricHaarlem);
                            }
                        </div>
                    }
                }
            </div>
        </div>
    </div>
</div>