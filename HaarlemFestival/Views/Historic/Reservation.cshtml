@using HaarlemFestival.Models;
@using System.Collections.Generic;
@model HistoricView

@{
    ViewBag.Title = "Historic Haarlem - Reservation";
}

@{
    if (Session["added_to_basket"] != null)
    {
        // Added to basket popup
        if ((bool)Session["added_to_basket"])
        {
            <div class="basket-alert">
                <div class="alert alert-success alert-dismissable">
                    <a href="#" class="close" data-dismiss="alert" aria-label="close">×</a>
                    <h3>Added!</h3> The item has been added to your basket.
                </div>
            </div>
        }

        Session["added_to_basket"] = false;
    }
}

<script type="text/javascript">
    function CalcPriceAndTicketCheck(number, availableTickets) {
        // Getting the values from the input boxes
        var tickets = document.getElementById("ticket" + number).value;
        var grouptickets = document.getElementById("groupticket" + number).value;

        // Getting the price, and converting to JS format
        var price = parseFloat("@Model.Tours[0].Price".replace(",", "."));
        var groupprice = parseFloat("@Model.Tours[0].AlternativePrice".replace(",", "."));

        // Checking if ordered tickets not to high or to low
        // This activates the bootstrap popup
        if (tickets < 0 || tickets > (availableTickets - (grouptickets * 4)) || grouptickets < 0 || grouptickets > Math.floor((availableTickets - tickets) / 4)) {
            // Ordering more than 0 tickets?
            if (tickets < 0 || grouptickets < 0) {
                $("#TicketAlert").modal();
                document.getElementById("text").innerHTML = ("<p>You inserted <b> " + tickets + " </b> tickets.</p><p>Please insert a number above 0.</p>");
            }

                // Cant order more than total available tickets
            else if (tickets > (availableTickets - (grouptickets * 4))) {
                $("#TicketAlert").modal();
                document.getElementById("text").innerHTML = ("<p>You inserted <b> " + (+tickets + (grouptickets * 4)) + " </b> tickets, but there are only <b>" + availableTickets + "</b> left.</p><p>Please insert <b>" + availableTickets + "</b> or lower.</p>");
            }
            else if (grouptickets > Math.floor((availableTickets - tickets) / 4)) {
                $("#TicketAlert").modal();
                document.getElementById("text").innerHTML = ("<p>You inserted <b> " + (+tickets + (grouptickets * 4)) + " </b> tickets, but there are only <b>" + Math.floor((availableTickets - tickets) / 4) + "</b> left.</p><p>Please insert <b>" + availableGroupTickets + "</b> or lower.</p>");
            }
            tickets = 0;
            grouptickets = 0;
            document.getElementById("ticket" + number).value = ("0");
            document.getElementById("groupticket" + number).value = ("0");
        }

        // Calculating new total price
        var totalprice = ((tickets * price) + (grouptickets * groupprice));

        // Replacing the total price with the new value
        document.getElementById("totalprice" + number).innerHTML = ("€ " + (totalprice.toFixed(2)).replace(".", ","));
        // Total price in hidden input, used for total price
        $("input#totalprice" + number).val(totalprice);

        CalcTotalPrice();
    }

    // Fadeout for "added to basket"
    setTimeout(function () {
        $('.basket-alert').fadeOut();
    }, 15000);

    function CalcTotalPrice() {
        // Getting total amount of events
        var items = $(".priceAllHistoric").length;
        var prijs = 0;

        // Loop through all hidden inputs
        for (var p = 0; p < items; p++) {
            prijs = +prijs + +$("input#totalprice" + p).val();
        }

        // Updating new total price
        $("p#priceAllHistoric").html("€ " + (prijs.toFixed(2)).replace(".", ","));
    }

</script>

<div class="event-banner historic"></div>

<div class="event container">
    <div class="row">
        <!-- Section 1 -->
        <div class="event-section-1">
            <div class="col-md-6">
                <h1 class="title">Historic Haarlem - book a ticket</h1>
                <p class="content">
                    On this page you can make a reservation for a Historic Haarlem Tour. Pick a day and a time, and select the amount of ticktets you would like.
                </p>
            </div>

            <div class="col-md-6">
                <div class="sfeer-image">
                    <img src="/images/Historic/sfeer/map1.jpg" />
                </div>
                <div class="sfeer-image">
                    <img src="/images/Historic/sfeer/map2.jpg" />
                </div>
                <div class="sfeer-image">
                    <img src="/images/Historic/sfeer/map3.jpg" />
                </div>
            </div>
        </div>

        <!-- Section 2 -->
        <div class="event-section-2">
            <hr class="title-hr title-line-left">
            <div class="event-header historicTickets">
                <div class="overlay">
                    <span class="header_tekst">Get your tickets</span>
                </div>
            </div>
            <hr class="title-hr title-line-right">
        </div>

        <!-- Content -->
        <ul class="nav nav-tabs">
            @foreach (Day day in Model.Days)
            {
                if (day == Model.Days[0])
                {
                    <li class="active"><a data-toggle="tab" href="#Day-@day.DayId">@day.Naam</a></li>
                }
                else
                {
                    <li><a data-toggle="tab" href="#Day-@day.DayId">@day.Naam</a></li>
                }
            }
        </ul>

        @{
            // Declaring variables
            int i = 0;
            string idtickets;
            string idgrouptickets;
            string totalprice;
            string tabclass;
            int availableTickets;
        }

        @using (Html.BeginForm("Book", "Historic", FormMethod.Post))
        {
            <div class="tab-content">
                @{
                    foreach (Day day in Model.Days)
                    {
                        if (day == Model.Days[0])
                        {
                            tabclass = "tab-pane fade in active historic-tickets";
                        }
                        else
                        {
                            tabclass = "tab-pane fade historic-tickets";
                        }
                        <div id="Day-@day.DayId" class="@tabclass">
                            <div class="table table-hover table-responsive ticket-table">
                                <table>
                                    <tr>
                                        <th class="hidden">id</th>
                                        <th>Tickets</th>
                                        <th>Group ticket</th>
                                        <th>Available</th>
                                        <th>Language</th>
                                        <th>Guide</th>
                                        <th>Time</th>
                                        <th>Total price</th>
                                    </tr>

                                    <tbody>
                                        @foreach (Historic tour in Model.Tours)
                                        {
                                            if (tour.Day == day)
                                            {
                                                Model.Reservering.Add(new BesteldeActiviteit());

                                                // Creating unieke id's per row
                                                idtickets = String.Format("ticket{0}", i);
                                                idgrouptickets = String.Format("groupticket{0}", i);
                                                totalprice = String.Format("totalprice{0}", i);

                                                availableTickets = tour.TotalTickets - tour.BoughtTickets;

                                                // Filling the table
                                                <tr>
                                                    <td class="hidden"><input name="Reservering[@i].Activiteit.ActivityId" value="@tour.ActivityId" class="hidden" /></td>
                                                    <td class="ticketsInput" onchange="CalcPriceAndTicketCheck(@i, @availableTickets);">@Html.TextBoxFor(m => Model.Reservering[i].Aantal, new { @type = "number", @min = 0, @id = idtickets })</td>
                                                    <td class="ticketsInput" onchange="CalcPriceAndTicketCheck(@i, @availableTickets);">@Html.TextBoxFor(m => Model.Reservering[i].AantalAlternatief, new { @type = "number", @min = 0, @id = idgrouptickets })</td>
                                                    <td>@availableTickets tickets</td>
                                                    <td>@tour.Guide.LanguageName</td>
                                                    <td>@tour.Guide.GuideName</td>
                                                    <td>@tour.StartSession.TimeOfDay.ToString(@"hh\:mm")</td>
                                                    <td><p id=@totalprice>€ 0,00</p><input type="hidden" id="@totalprice" class="priceAllHistoric" /></td>
                                                </tr>
                                                i++;
                                            }
                                        }
                                    </tbody>
                                    <tfoot>
                                        <tr>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                            <td><p id="priceAllHistoric">€ 0,00</p></td>
                                        </tr>
                                    </tfoot>
                                </table>

                                <p>These are the available tours on @day.Naam</p>
                            </div>
                        </div>
                    }
                }

                <input type="submit" value="Book" class="btn btn-book btn-reservation" />

                <br />
                <div class="historic extra-info">
                    <h3>Ticket information</h3>
                    <p>The group will consist of 12 participants and one guide. Participants must at least be 12 years old and must be able to walk the entire route (no strollers are allowed).</p>
                    @{ float? groupticket = (4f * Model.Tours[0].Price); }
                    <p>A tickets costs € @Model.Tours[0].Price per person, and a group ticket gets you 4 tickets for only € @Model.Tours[0].AlternativePrice instead of € @groupticket </p>
                    <br />
                </div>
            </div>
        }
    </div>
</div>

<!-- BOOTSTRAP MODALS FOR NEGATIVE OR TO MUCH TICKETS -->
<div class="modal fade" id="TicketAlert" role="dialog">
    <div class="modal-dialog">

        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Error</h4>
            </div>
            <div class="modal-body">
                <div id="text"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>
