@using HaarlemFestival.Models
@model Talking

    @if (ViewData.ModelState.Values.Where(v => v.Errors.Count != 0).Count() > 0)
    {
        <div id="bootstrapAlert" class="alert alert-danger alert-dismissible">
            <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
            <span class="loginErrors">@Html.ValidationSummary()</span>
        </div>
    }

    <div class="form-group">
        <div class="input-group">
            @Html.Label("Name")
            @Html.TextBoxFor(t => t.Talk.Naam)
        </div>
    </div>
    <div class="form-group">
        <div class="input-group">
            @Html.Label("Description")
            @Html.TextAreaFor(t => t.Talk.Description, new { @placeholder = "Description" })
        </div>
    </div>
    <div class="form-group">
        <div class="input-group">
            @Html.Label("Start:")
            @Html.TextBoxFor(d => d.StartSession, new { @Value = Model.StartSession.ToString("yyyy-MM-ddTHH:mm"), @type = "datetime-local" })
            @Html.Label("End:")
            @Html.TextBoxFor(d => d.EndSession, new { @Value = Model.EndSession.ToString("yyyy-MM-ddTHH:mm"), @type = "datetime-local" })
        </div>
    </div>
    <div class="form-group">
        <div class="input-group">
            @Html.Label("Name Person 1: ")
            @Html.EditorFor(t => t.Talk.Person1)
            <br />
            @Html.Label("Images Person 1")
            <input type="file" name="Person1"/>
            <input type="file" name="Person1Alt" />
        </div>
    </div>
    <div class="form-group">
        <div class="input-group">
            @Html.Label("Name Person 1: ")
            @Html.EditorFor(t => t.Talk.Person2)
            <br />
            @Html.Label("Images Person 2")
            <input type="file" name="Person2" />
            <input type="file" name="Person2Alt" />
        </div>
    </div>
    <div class="form-group">
        <div class="input-group">
            @Html.Label("Total Seats:")
            @Html.EditorFor(t => t.TotalTickets, new { @placeholder = "0" })
        </div>
    </div>
    <div class="form-group">
        <div class="input-group">
            @Html.Label("Price")
            @Html.TextBoxFor(t => t.Price, new { @placeholder ="0.00" })
        </div>
    </div>
    <div class="form-group">
        <div class="input-group">
            @Html.Label("Maximum Tickets per reservation")
            @Html.EditorFor(t => t.Talk.MaxTickets)
        </div>
    </div>
    <div class="form-group">
        <div class="input-group">
            @Html.Label("Phonenumber")
            @Html.TextBoxFor(t => t.Phonenumber, new { @Value = "+31 023 - 5241020", @readonly = "readonly" })
        </div>
    </div>
    <div class="form-group">
        <div class="input-group">
            @Html.Label("Address")
            @Html.TextBoxFor(t => t.Address, new { @Value = "Lange Begijnestraat 9, 2011 HH Haarlem", @readonly = "readonly" })
        </div>
    </div>

    <div class="modal-footer">
        <input type="submit" class="btn btn-success" value="Save Interview" />
        <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
    </div>
