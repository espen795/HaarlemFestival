@model HaarlemFestival.Models.LoginModel
@{

                ViewBag.Title = "Login";
}
<div class="event-banner"></div>
@{
    if (Session["NotLoggedIn"] != null)
    {
        if ((bool)Session["NotLoggedIn"])
        {
            <div class="basket-alert">
                <div class="alert alert-danger alert-dismissable">
                    <a href="#" class="close" data-dismiss="alert" aria-label="close">×</a>
                    <h3>Failure!</h3> You are not logged in.
                </div>
            </div>
        }

        Session["NotLoggedIn"] = false;
    }
}
<script>
    // Als de pagina is geladen.
    $(document).ready(function ()
    {
        if (sessionStorage.getItem("failedLogins") == null)
        {
            sessionStorage.setItem("failedLogins", 0);
        }

        var badLogins = sessionStorage.getItem("failedLogins");
        GetModelErrors("@ViewData.ModelState.IsValid", badLogins)

        if (badLogins >= 3) {
            LoginBlock();
        }
    });

    function GetModelErrors(noErrors, failedLogins)
    {
        if ((noErrors != "True") || (failedLogins >= 3)) {
            $('#loginError').css('opacity', '1.0');
            sessionStorage.setItem("failedLogins", sessionStorage.getItem("failedLogins") + 1);
        }
    }

    function LoginBlock()
    {
        var timeRemaining = 300;
        $('#loginButton').prop('disabled', true); // loginknop disablen
        $('#loginButton').css('cursor', 'not-allowed');
        $('#loginButton').css('opacity', '0.5');

        var timer = setInterval(function ()
        {
            timeRemaining--;
            var text = $('.loginErrors').text("Some of the entered information isn't correct.\nYou can try again in " + timeRemaining + " second(s).");
            text.html(text.html().replace(/\n/g, '<br/>'));

            if (timeRemaining == 0) {
                // Alert van danger naar info veranderen.
                $('#bootstrapAlert').removeClass('alert-danger');
                $('#bootstrapAlert').addClass('alert-info');

                // Alert tekst veranderen.
                $('.loginErrors').text("You can login again");

                // Loginbutton enablen.
                $('#loginButton').removeProp('disabled');
                $('#loginButton').css('cursor', 'pointer');
                $('#loginButton').css('opacity', '1');

                // Interval van de timer weghalen.
                clearInterval(timer);
                sessionStorage.setItem("failedLogins", 0);
            }
        }, 1000);
    }

</script>

<div class="container body-content">

    <section id="loginArea">

        <div id="loginError">
            <div id="bootstrapAlert" class="alert alert-danger alert-dismissible">
                <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                <span class="loginErrors">@Html.ValidationSummary()</span>
            </div>
        </div>

        <p class="title">Please enter your login information below.</p>

        <div class="col-md-4 col-md-offset-4">
            @using (Html.BeginForm("Login", "Admin", FormMethod.Post))
            {

                <div class="form-group">
                    <div class="input-group">
                        <p class="input-group-addon"><i class="glyphicon glyphicon-user"></i></p>
                        @Html.TextBoxFor(m => m.Username, new { @placeholder = " Username", @class = "username" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="input-group">
                        <p class="input-group-addon"><i class="glyphicon glyphicon-lock"></i></p>
                        @Html.TextBoxFor(m => m.Password, new { @placeholder = " Password", @class = "password" })
                    </div>
                </div>
                <div class="form-group">
                    <input id="loginButton" class="form-control" type="submit" value="Log in >>" />
                </div>
            }
        </div>
    </section>
</div>