@using HaarlemFestival.Models
@model Restaurant

<script>
    $(document).ready(function () {
        $("#Rating").keypress(function (key) {
            key.preventDefault();
        });

        CheckCuisineSelectors();
    });

    function CheckCuisineSelectors() {
        var noCuisineSelected = 0;

        $("#CuisineSelector select.Cuisines").each(function () {
            var selectedValue = $(this).find('option:selected').val().toString();
            console.log(this);
            console.log("Value: " + selectedValue);
            if (selectedValue == "") {
                if (noCuisineSelected >= 1) {
                    $(this).remove();
                }
                noCuisineSelected++;
            }

        });

        if (noCuisineSelected == 0) {
            console.log("Add New Select");
            // TODO: Nieuwe Dropdown Toevoegen
        }
    }
</script>

@if (ViewData.ModelState.Values.Where(v => v.Errors.Count != 0).Count() > 0)
{
    <div id="bootstrapAlert" class="alert alert-danger alert-dismissible">
        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
        <span class="loginErrors">@Html.ValidationSummary()</span>
    </div>
}

@if (Model.RestaurantId != 0)
{
    @Html.HiddenFor(r => r.RestaurantId, new { @Value = Model.RestaurantId })
}

@try
{
    @Html.HiddenFor(r => r.LocationIMG, new { @Value = Model.LocationIMG })
}
catch (Exception) { }

@try
{
    @Html.HiddenFor(r => r.FoodIMG, new { @Value = Model.FoodIMG })
}
catch (Exception) { }


<div class="form-group row">
    <div class="input-group">
        <div class="col-md-12">
            @Html.Label("Name")<i class="required red">*</i>
            @Html.TextBoxFor(r => r.Naam, new { @placeholder = "Restaurant Name" })
        </div>
    </div>
</div>

<div class="form-group row">
    <div class="input-group">
        <div class="col-md-12">
            @Html.Label("Description")
            @Html.TextAreaFor(r => r.Description, new { @placeholder = "Restaurant Description" })
        </div>
    </div>
</div>

<div class="form-group row">
    <div class="input-group">
        <div class="col-md-6">
            @Html.Label("Standard Price")<i class="required red">*</i>
            @Html.TextBoxFor(r => r.DisplayPrice, new { @placeholder = "0.00", @Value = String.Format("{0:0.00}", Model.DisplayPrice) })
        </div>
        <div class="col-md-6">
                @Html.Label("Rating out of 5")<i class="required red">*</i>
                @Html.TextBoxFor(r => r.Rating, new { @placeholder = 0, @min = 0, @max = 5, @type = "number" }) 
        </div>
    </div>
</div>

<div class="form-group">
    <div class="input-group" id="CuisineSelector">
        @Html.Label("Cuisines") <br />

        @if (Model.Cuisines != null)
        {

            foreach (Cuisine c in Model.Cuisines)
            {
                @Html.DropDownList("Cuisine" + c.CuisineId, new SelectList((List<Cuisine>)ViewData["Cuisines"], "CuisineId", "Naam", c.CuisineId), "[Select a Cuisine]", new { @Value = c.CuisineId, @class = "Cuisines", @onchange = "CheckCuisineSelectors();" }) <br />
            }
        }

    </div>
</div>

<div class="form-group row">
    <div class="input-group">
        <div class="col-md-6">
            @Html.Label("Food Image")
            <input type="file" name="foodIamge" />
        </div>
        <div class="col-md-6">
            @Html.Label("Restaurant Image")
            <input type="file" name="restaurantIamge" />
        </div>
    </div>
</div>

<div class="modal-footer">
    <input type="submit" class="btn btn-success" value="Save Restaurant" />
    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
</div>

