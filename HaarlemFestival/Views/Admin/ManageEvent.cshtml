@using HaarlemFestival.Models
@using System.Text.RegularExpressions
@using System.Text;
@model EventData
@{
    ViewBag.Title = "Manage";
    StringBuilder builder = new StringBuilder();
}

<!-- Modal Delete Data -->
<div class="modal fade" id="deletePopup" tabindex="-1" role="dialog" aria-labelledby="deletePopup">
    <div class="modal-dialog modal-lg" role="document">

        <!-- CONTENT -->
        <div class="modal-content">

            <!-- HEADER -->
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Delete Data</h4>
            </div>

            <!-- BODY -->
            <div class="modal-body">
                Are you sure you want to delete this data?
            </div>

            <!-- FOOTER -->
            <div class="modal-footer">
                <button type="button" class="btn btn-success" onclick="DeleteConfirmed()"><i class="fa fa-check"></i> Yes, I am sure</button>
                <button type="button" class="btn btn-danger" data-dismiss="modal"><i class="fa fa-times"></i> No, Take me back</button>
            </div>
        </div>
    </div>
</div>



<!-- Modal New Data -->
<div class="modal fade" id="newPopup" tabindex="-1" role="dialog" aria-labelledby="newPopup">
    <div class="modal-dialog modal-lg" role="document">

        <!-- CONTENT -->
        <div class="modal-content">

            <!-- HEADER -->
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">New Data</h4>
            </div>

            <!-- BODY -->
            <div class="modal-body">
                @{Html.RenderPartial("_AddEventView", "Admin");}
            </div>
        </div>
    </div>
</div>

<!-- Modal Update Data -->
<div class="modal fade" id="updatePopup" tabindex="-1" role="dialog" aria-labelledby="newPopup">
    <div class="modal-dialog modal-lg" role="document">

        <!-- CONTENT -->
        <div class="modal-content">

            <!-- HEADER -->
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Update Data</h4>
            </div>

            <br />
            <div class="alert alert-info col-md-8 col-md-offset-2">
                Essential information is marked with an asterisk(<i class="required red">*</i>)
            </div>

            <div class="errorAlert">
                <div id="bootstrapAlert" class="alert alert-danger alert-dismissible">
                    <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                    <span class="errorList"></span>
                </div>
            </div>
            <!-- BODY -->
            <div class="modal-body">

            </div>
        </div>
    </div>
</div>


<!-- Modal Image -->
<div class="modal fade" id="imagePopup" tabindex="-1" role="dialog" aria-labelledby="imagePopup">
        <span id="closeImage" class="close">&times;</span>
        <!-- CONTENT -->
       <img id="eventImage" class="modal-content showEventImage" src="" onError="this.src = '../images/no_image.jpg'"/>
</div>



<div class="container">
    <script type="text/javascript">

        $(document).ready(function () {
            var chosenEvent = "@ViewBag.ChosenEvent"

            $('#selectedEvent').val(chosenEvent);
            SelectedEventChanged();

            // Tooltips maken.
            $('[data-toggle="tooltip"]').tooltip();

            SetFormOptions();
        })

        function SetFormOptions()
        {
            // Ervoor zorgen dat de form niet de actie uitvoerd.
            $("form").on("submit", function (form) {
                form.preventDefault();
            })

            // Als een form gesubmit wordt
            $("form").submit(function () {
                SubmitForm(this);
            });
        }

        jQuery.fn.center = function () {
            this.css("position", "absolute"); // Position: Absolute toevoegen

            // het Item naar het midden van de pagina zetten.
            this.css("top", Math.max(0, (($(window).height() - $(this).outerHeight()) / 2) +
                $(window).scrollTop()) + "px");
            this.css("left", Math.max(0, (($(window).width() - $(this).outerWidth()) / 2) +
                $(window).scrollLeft()) + "px");
            return this;
        }

        function ShowEventImage(path)
        {
            var modal = document.getElementById('imagePopup');
            var modalImg = document.getElementById("eventImage");
            
            modal.style.display = "block";
            modalImg.src = "../images/" + path;

            // Get the <span> element that closes the modal
            var span = document.getElementById("closeImage");

            // When the user clicks on <span> (x), close the modal
            span.onclick = function () {
                $('#imagePopup').modal('hide');
                $('.modal-backdrop').remove();
            }
        }

        function SelectedEventChanged()
        {
            // Alle Data Tabellen verbergen.
            $('.eventTable').each(function ()
            {
                $(this).hide();
            })

            // Alle filters verbergen.
            $('.eventFilter').each(function ()
            {
                $(this).hide();
            })

			// Alle Event Headers verbergen.
			$('.eventImage').each(function ()
			{
				$(this).hide();
			})

            $('#newDataDiv').hide();

            // Aan de hand van een evenement de data en filters tonen.
            switch ($('#selectedEvent').val())
            {
                case "Jazz@Patronaat":
                    $('#jazzTable').show();
                    $('#dateFilter').show();
                    $('#jazzImage').show();
                    $('#newDataDiv').show();
                    break;

                case "DinnerInHaarlem":
                    $('#dateFilter').show();
                    $('#dinnerTable').show();
                    $('#restaurantTable').show();
                    $('#cuisineFilter').show();
                    $('#restaurantFilter').show();
					$('#restaurantImage').show();
                    $('#dinnerImage').show();
                    $('#newDataDiv').show();
                    break;

                case "TalkingHaarlem":
                    $('#dateFilter').show();
                    $('#talkingTable').show();
                    $('#talkingImage').show();
                    $('#newDataDiv').show();
                    break;

                case "HistoricHaarlem":
                    $('#guideTable').show();
                    $('#historicTable').show();
                    $('#dateFilter').show();
                    $('#guideFilter').show();
                    $('#languageFilter').show();
					$('#guideImage').show();
                    $('#historicImage').show();
                    $('#newDataDiv').show();
                    break;
            }
        }

        // Data uit de tabel filteren.
        function FilterData()
        {
            var filters = [];


            // Voor elke filter
            $('.eventFilter').each(function () {

                if ($(this).val() != "") // Als de filter is geselecteerd.
                {
                    filters.push($(this).val()) // Filter toevoegen.
                }
            })


            // TEST: Alle Filters in de console neerzetten.
            console.log(filters);

            // Alle rows van de table vinden.
            var tr = $(".eventData").find("tr");
            tr.hide(); // Alle rows van de table verbergen.

            // Als er geen filter is geselecteerd.
            if (filters.length == 0)
            {
                tr.show(); // Alle rijen laten zien.
                return; // Uit de functie gaan.
            }

            // Elke rij filteren.
            tr.filter(function ()
            {
                var $t = $(this);
                for (var index = 0; index < filters.length; ++index)
                {

                    if ($t.is(":not(:contains('" + filters[index] + "'))")) // Als de rij niet voldoet aan de filters
                    {
                        return false; // Rij verbergen.
                    }
                }

                return true; // Rij laten zien.
            })
                .show();
        }

        function OpenUpdateForm(id, type)
        {
            $.get('@Url.Action("_UpdateData", "Admin")', { id: id, type: type }, function (form) {
                $("#updatePopup .modal-body").html(form);
                $(".errorAlert").css("display", "none");
                SetFormOptions();
    });
        }


        function OpenDeleteConfirm(id, type)
        {
            sessionStorage.setItem("type", type);
            console.log("Type set to: ", type);
            $("#deletePopup").attr("activityId", id);
        }

        function DeleteConfirmed() {
            var type = sessionStorage.getItem("type");
            var url;
            console.log(type);

            switch (type)
            {
                case "Restaurant":
                    url = "@Url.Action("DeleteRestaurant", "Admin")";
                    break;

                case "Guide":
                    url = "@Url.Action("DeleteGuide", "Admin")";
                    break;

                case "Activity":
                    url = "@Url.Action("DeleteEvent", "Admin")";
                    break;
            }

            var activityId = $("#deletePopup").attr("activityId");

            $.post(url, { id: activityId });

            var selectedEvent = $('#selectedEvent').val();
            window.location.href = '@Url.Action("ManageEvent", "Admin")?selectedEvent=' + selectedEvent;
        }

        function SubmitForm(form) {
            $.ajax({
                type: 'post',
                url: $(form).attr("action"),
                data: $(form).serialize(),
                complete: function (data) {
                    console.log(data);
                    console.log();

                    if (data.responseJSON.success == true) {
                        console.log("Successful");
                        var selectedEvent = $('#selectedEvent').val();
                        window.location.href = '@Url.Action("ManageEvent", "Admin")?selectedEvent=' + selectedEvent;
                    }
                    else {
                        $(".errorAlert").css("display", "block");
                        $(".errorList").html(data.responseJSON.errorList);
                    }
                }
            });
        }

    </script>

    <section id="topFilterBar" class="col-md-12">
        <div id="selectEvent" class="col-md-3">

            <select id="selectedEvent" name="selectedEvent" onchange="SelectedEventChanged()">
                <option value="">Select an event.</option>
                <option value="Jazz@Patronaat">Jazz@Patronaat</option>
                <option value="DinnerInHaarlem">Dinner in Haarlem</option>
                <option value="TalkingHaarlem">Talking Haarlem</option>
                <option value="HistoricHaarlem">Historic Haarlem</option>
            </select>
        </div>

        <div id="filterSystem" class="col-md-9">
            @Html.DropDownListFor(m => m.Filters.dateFilter, new SelectList(Model.Filters.dateFilter, "DateDisplay", "DateDisplay"), "Select a Date.", new { @id = "dateFilter", @class = "eventFilter", @onchange = "FilterData()" })
            @Html.DropDownListFor(m => m.Filters.guideFilter, new SelectList(Model.Filters.guideFilter, "GuideName", "GuideName"), "Select a Guide.", new { @id = "guideFilter", @class = "eventFilter", @onchange = "FilterData()" })
            @Html.DropDownListFor(m => m.Filters.restaurantFilter, new SelectList(Model.Filters.restaurantFilter, "Naam", "Naam"), "Select a Restaurant", new { @id = "restaurantFilter", @class = "eventFilter", @onchange = "FilterData()" })
            @Html.DropDownListFor(m => m.Filters.cuisineFilter, new SelectList(Model.Filters.cuisineFilter, "Naam", "Naam"), "Select a Cuisine.", new { @id = "cuisineFilter", @class = "eventFilter", @onchange = "FilterData()" })
        </div>
    </section>
    <div class="row">
        <div class="col-md-4 col-md-offset-4" id="newDataDiv">
            <div class="col-md-12 middle">Couldn't find the data you were looking for, or have you found new data? You can add them over here!</div>
            <div class="col-md-12 middle"><button class="btn btn-black" data-toggle="modal" data-target="#newPopup" href="#">Add new data.</button></div>
        </div>
    </div>

    <section>
            <div class="event-section-2 eventImage" id="jazzImage">
                <hr class="title-hr title-line-left">
                <div class="event-header">
                    <div class="overlay">
                        <span class="header_tekst">Jazz@Patronaat</span>
                    </div>
                </div>
                <hr class="title-hr title-line-right">
            </div>

        <table id="jazzTable" class="eventTable table table-striped table-responsive">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Date & Time</th>
                    <th>Location</th>
                    <th>Hall</th>
                    <th>Price</th>
                    <th>Seats</th>
                    <th>Image</th>
                    <th colspan="2"></th>
                </tr>
            </thead>
            <tbody class="eventData">
                @foreach (Jazz activity in Model.Activities.OfType<Jazz>())
                {
                    <tr>
                        <td>@activity.artist.ArtistName</td>
                        <td>@Regex.Replace(activity.artist.ArtistInformation, @"<(.|\n)*?>", string.Empty)</td>
                        <td>@activity.StartSession.ToString("dddd dd-MM-yyyy H:mm") - @activity.EndSession.ToString("H:mm")</td>
                        <td>@activity.ConcertLocation</td>
                        <td>@activity.ConcertHall</td>
                        <td>@String.Format("{0:0.00}", activity.Price)</td>
                        <td>@activity.TotalTickets</td>
                        <td><i onclick='ShowEventImage("Jazz/Artiesten/@activity.artist.ArtistImage")' data-toggle="modal" data-target="#imagePopup" href="#" class="glyphicon glyphicon-picture" aria-hidden="true"></i></td>
                        <td><i onclick="OpenUpdateForm(@activity.ActivityId, 'Jazz')" class="glyphicon glyphicon-pencil" data-toggle="modal" data-target="#updatePopup" href="#"></i></td>
                        <td><i onclick="OpenDeleteConfirm(@activity.ActivityId, 'Activity')" data-toggle="modal" data-target="#deletePopup" href="#" class="glyphicon glyphicon-remove"></i></td>
                    </tr>
                }
            </tbody>
        </table>

        <div class="event-section-2 eventImage" id="restaurantImage">
            <hr class="title-hr title-line-left">
            <div class="event-header restaurantinfo">
                <div class="overlay">
                    <span class="header_tekst">Restaurants</span>
                </div>
            </div>
            <hr class="title-hr title-line-right">
        </div>

        <table id="restaurantTable" class="eventTable table table-striped table-responsive">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Rating</th>
                    <th>Cuisines</th>
                    <th>Standard Price</th>
                    <th>Food Image</th>
                    <th>Restaurant Image</th>
                    <th colspan="2"></th>
                </tr>
            </thead>
            <tbody class="eventData">
                @foreach (Restaurant r in Model.Restaurants)
                {
                    builder.Clear();
                    foreach (Cuisine c in r.Cuisines)
                    {
                        builder.Append(c.Naam + ", ");
                    }
                    <tr>
                        <td>@r.Naam</td>
                        <td>@r.Description</td>
                        <td>@r.Rating</td>
                        <td>@builder</td>
                        <td>@String.Format("{0:0.00}", r.DisplayPrice)</td>
                        <td><i onclick='ShowEventImage("Dinner/restaurants/@r.FoodIMG")' data-toggle="modal" data-target="#imagePopup" href="#" class="glyphicon glyphicon-picture" aria-hidden="true"></i></td>
                        <td><i onclick='ShowEventImage("Dinner/restaurants/@r.LocationIMG")' data-toggle="modal" data-target="#imagePopup" href="#" class="glyphicon glyphicon-picture" aria-hidden="true"></i></td>
                        <td><i onclick="OpenUpdateForm(@r.RestaurantId, 'Restaurant')" class="glyphicon glyphicon-pencil" data-toggle="modal" data-target="#updatePopup" href="#"></i></td>
                        <td><i onclick="OpenDeleteConfirm(@r.RestaurantId, 'Restaurant')" data-toggle="modal" data-target="#deletePopup" href="#" class="glyphicon glyphicon-remove"></i></td>
                    </tr>
                }
            </tbody>
        </table>

        <div class="event-section-2 eventImage" id="dinnerImage">
            <hr class="title-hr title-line-left">
            <div class="event-header restaurantinfo">
                <div class="overlay">
                    <span class="header_tekst">Dinner in Haarlem</span>
                </div>
            </div>
            <hr class="title-hr title-line-right">
        </div>

        <table id="dinnerTable" class="eventTable table table-striped table-responsive">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Adress</th>
                    <th>Session</th>
                    <th>Seats</th>
                    <th>Cuisines</th>
                    <th>Price</th>
                    <th>Price (12-)</th>
                    <th colspan="2"></th>
                </tr>
            </thead>
            <tbody class="eventData">
                @foreach (Dinner activity in Model.Activities.OfType<Dinner>())
                {
                    builder.Clear();
                    foreach (Cuisine c in activity.Restaurant.Cuisines)
                    {
                        builder.Append(c.Naam + ", ");
                    }

                    <tr>
                        <td>@activity.Restaurant.Naam</td>
                        <td>@activity.Address</td>
                        <td>@activity.StartSession.ToString("dddd dd-MM-yyyy H:mm") - @activity.EndSession.ToString("H:mm")</td>
                        <td>@activity.TotalTickets</td>
                        <td>@builder</td>
                        <td>@String.Format("{0:0.00}", activity.Price)</td>
                        <td>@String.Format("{0:0.00}", activity.AlternativePrice)</td>
                        <td><i onclick="OpenUpdateForm(@activity.ActivityId, 'Dinner')" class="glyphicon glyphicon-pencil" data-toggle="modal" data-target="#updatePopup" href="#"></i></td>
                        <td><i onclick="OpenDeleteConfirm(@activity.ActivityId, 'Activity')" data-toggle="modal" data-target="#deletePopup" href="#" class="glyphicon glyphicon-remove"></i></td>
                    </tr>
                }
            </tbody>
        </table>

        <section class="event-section-2 eventImage" id="talkingImage">
            <hr class="title-hr title-line-left">
            <section class="event-header talking-haarlem">
                <section class="overlay">
                    <span class="header_tekst">Talking Haarlem</span>
                </section>
            </section>
            <hr class="title-hr title-line-right">
        </section> <!-- Section 2 -->

        <table id="talkingTable" class="eventTable table table-striped table-responsive">
            <thead>
                <tr>
                    <th>Interview</th>
                    <th>Description</th>
                    <th>Date & Time</th>
                    <th>Seats</th>
                    <th>Location</th>
                    <th>Price</th>
                    <th>Maximum Tickets</th>
                    <th>First Person</th>
                    <th>Second Person</th>
                    <th colspan="2"></th>
                </tr>
            </thead>
            <tbody class="eventData">
                @foreach (Talking activity in Model.Activities.OfType<Talking>())
                {
                    <tr>
                        <td>@activity.Talk.Naam</td>
                        <td>@activity.Talk.Description</td>
                        <td>@activity.StartSession.ToString("dddd dd-MM-yyyy H:mm") - @activity.EndSession.ToString("H:mm")</td>
                        <td>@activity.TotalTickets</td>
                        <td>@activity.Address</td>
                        <td>@String.Format("{0:0.00}", activity.Price)</td>
                        <td>@activity.Talk.MaxTickets</td>
                        <td><i onclick='ShowEventImage("Talking/@activity.Talk.Person1IMG")' data-toggle="modal" data-target="#imagePopup" href="#" class="glyphicon glyphicon-picture" aria-hidden="true"></i></td>
                        <td><i onclick='ShowEventImage("Talking/@activity.Talk.Person2IMG")' data-toggle="modal" data-target="#imagePopup" href="#" class="glyphicon glyphicon-picture" aria-hidden="true"></i></td>
                        <td><i onclick="OpenUpdateForm(@activity.ActivityId, 'Talking')" class="glyphicon glyphicon-pencil" data-toggle="modal" data-target="#updatePopup" href="#"></i></td>
                        <td><i onclick="OpenDeleteConfirm(@activity.ActivityId, 'Activity')" data-toggle="modal" data-target="#deletePopup" href="#" class="glyphicon glyphicon-remove"></i></td>
                    </tr>
                }
            </tbody>
        </table>

        <div class="event-section-2 eventImage" id="guideImage">
            <hr class="title-hr title-line-left">
            <div class="event-header historicLocations">
                <div class="overlay">
                    <span class="header_tekst">Guides</span>
                </div>
            </div>
            <hr class="title-hr title-line-right">
        </div>

        <table id="guideTable" class="eventTable table table-striped table-responsive">
            <thead>
                <tr>
                    <th>Guide Name</th>
                    <th>Language</th>
                    <th>Language Abbreviation</th>
                    <th colspan="2"></th>
                </tr>
            </thead>
            <tbody class="eventData">
                @foreach (Guide g in Model.Guides)
                {
                    <tr>
                        <td>@g.GuideName</td>
                        <td>@g.LanguageName</td>
                        <td>@g.LanguageAbbr</td>
                        <td><i onclick="OpenUpdateForm(@g.GuideId, 'Guide')" class="glyphicon glyphicon-pencil" data-toggle="modal" data-target="#updatePopup" href="#"></i></td>
                        <td><i onclick="OpenDeleteConfirm(@g.GuideId, 'Guide')" data-toggle="modal" data-target="#deletePopup" href="#" class="glyphicon glyphicon-remove"></i></td>
                    </tr>
                }
            </tbody>
        </table>

        <div class="event-section-2 eventImage" id="historicImage">
            <hr class="title-hr title-line-left">
            <div class="event-header historicLocations">
                <div class="overlay">
                    <span class="header_tekst">Tours</span>
                </div>
            </div>
            <hr class="title-hr title-line-right">
        </div>

        <table id="historicTable" class="eventTable table table-striped table-responsive">
            <thead>
                <tr>
                    <th>Date & Time</th>
                    <th>Start Location</th>
                    <th>Language</th>
                    <th>Guide</th>
                    <th>Seats</th>
                    <th>Price</th>
                    <th>Group Ticket</th>
                    <th colspan="2"></th>
                </tr>
            </thead>
            <tbody class="eventData">
                @foreach (Historic activity in Model.Activities.OfType<Historic>())
                {
                    <tr>
                        <td>@activity.StartSession.ToString("dddd dd-MM-yyyy H:mm")</td>
                        <td>@activity.Address</td>
                        <td>@activity.Guide.LanguageName</td>
                        <td>@activity.Guide.GuideName</td>
                        <td>@activity.TotalTickets</td>
                        <td>@String.Format("{0:0.00}", activity.Price)</td>
                        <td>@String.Format("{0:0.00}", activity.AlternativePrice)</td>
                        <td><i onclick="OpenUpdateForm(@activity.ActivityId, 'Historic')" class="glyphicon glyphicon-pencil" data-toggle="modal" data-target="#updatePopup" href="#"></i></td>
                        <td><i onclick="OpenDeleteConfirm(@activity.ActivityId, 'Activity')" data-toggle="modal" data-target="#deletePopup" href="#" class="glyphicon glyphicon-remove"></i></td>
                    </tr>
                }
            </tbody>
        </table>

    </section>
</div>
